
Install git:
https://git-scm.com/download/win

Open Windows PowerShell and navigate to the software folder
cd 'E:\PicoProbe User Local Data\Brace\software'

The version of Python we are using:

C:\ProgramData\Miniconda3\python.exe

Install the source code:
git clone https://github.com/ramanathanlab/PicoProbeDataFlow.git
cd .\PicoProbeDataFlow\

Enable the ability to run scripts from powershell
For more information: https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_execution_policies?view=powershell-7.3

Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process

Create a virtual environment:
C:\ProgramData\Miniconda3\python.exe -m venv env
.\env\Scripts\activate


Checking the python location should return the new Python in the env\Scripts folder:
where.exe python
E:\PicoProbe User Local Data\Brace\software\PicoProbeDataFlow\env\Scripts\python.exe

The same holds for pip:
where.exe pip
E:\PicoProbe User Local Data\Brace\software\PicoProbeDataFlow\env\Scripts\pip.exe


Install the package:
pip install -U setuptools wheel
python -m pip install --upgrade pip
pip install -r .\requirements\windows_requirements.txt
pip install -e .


The GlobusEndpoint configured on the User machine is rooted at C:\

We will use this directory for our transfers:
C:\Users\PicoProbeUser\Documents\MicroscopeData\Brace\transfers


=======================================

Run the hyperspectral application:
python .\examples\picoprobe_metadata_flow\main.py -c .\examples\picoprobe_metadata_flow\windows_picoprobe_to_polaris.yaml -l C:\Users\PicoProbeUser\Documents\MicroscopeData\Brace\transfers


Open a separate powershell and copy the test files into the transfer directory:
cd 'E:\PicoProbe User Local Data\Brace\software\PicoProbeDataFlow\'
cp .\data\VeloxTest-Membranes.emd C:\Users\PicoProbeUser\Documents\MicroscopeData\Brace\transfers

======================================

Running the spatiotemporal application:
python .\examples\temporal_application\main.py -c .\examples\temporal_application\windows_picoprobe_to_polaris_compute.yaml -l C:\Users\PicoProbeUser\Documents\MicroscopeData\Brace\transfers

Open a separate powershell and copy the test files into the transfer directory:
cd 'E:\PicoProbe User Local Data\Brace\software\PicoProbeDataFlow\'
cp '.\data\2023081040-700kx MultiFrams 991ms 600F Counting & FFI mode Falcon 700 kx 1819.emd' C:\Users\PicoProbeUser\Documents\MicroscopeData\Brace\transfers


Production runs simulator:
python -m picoprobe.simulator -i .\data\ -o C:\Users\PicoProbeUser\Documents\MicroscopeData\Brace\transfers -g Velox*.emd -t 30
python -m picoprobe.simulator -i .\data\ -o C:\Users\PicoProbeUser\Documents\MicroscopeData\Brace\transfers -g 2023*.emd -t 180

